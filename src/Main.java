import java.util.List;
import java.util.PriorityQueue;
import java.util.Queue;
import java.util.stream.Stream;

public class Main {
    public static void main(String[] args) {
        //Создадим изначальный список, как нас просят в задаче
        List<String> firstClients = List.of("Anya", "Sveta", "Olya", "Alexandra", "Ruslana", "Olesya", "Vika");

        Queue<String> queue = new PriorityQueue<>();
        queue.addAll(firstClients); //Заполним очередь из списка
        int counter = 0;
        while (!queue.isEmpty()) {
            counter++;
            String person = queue.poll();
            System.out.printf("%d. Принята %s. ", counter, person);
            try {
                Thread.sleep(600); // Задержка 1000 миллисекунд = 1 секунда
            } catch (InterruptedException e) {
                Thread.currentThread().interrupt(); // Восстановление статуса прерывания
                System.err.println("Цикл был прерван");
                break;
            }
            if (Math.random() < 0.5) { // проверка условия, которое срабатывает с 50% вероятностью
                System.out.println("Друг записался");
                queue.add("Friend of." + person);
            } else {
                System.out.println("Друг не записался");
            }
            System.out.println();
        }
        System.out.println("Очередь пуста.");
    }
}


//Вы начинающий мастер по маникюру. Вы знаете, что делаете свою работу достаточно хорошо,
//так что каждый новый клиент с вероятностью 50% приведёт своего друга.
//У вас есть список первых клиентов. Каждого клиента можно описать просто строкой:
//List<String> firstClients = List.of(“Anya”, “Sveta”, “Olya”, “Alexandra”, “Ruslana”, “Olesya”, “Vika”);
//
//Создайте Queue-коллекцию из этих клиентов.
//Каждого клиента вы принимаете в порядке очереди.
//В конце обработки каждого клиента с вероятностью 50% записывается его друг.
//В Java сэмулировать эту вероятность можно так:
//if (Math.random() < 0.5) { // проверка условия, которое срабатывает с 50% вероятностью
/// / друг записался
//} else {
/// / друг не записался
//}
//
//Имя другу можно сгенерировать из имени того, чьим другом он является через фразу a friend of.
// Например, если порекомендовала Sveta, то друга будут звать a friend of Sveta.
// Если и её друг порекомендует, то такого друга будут звать a friend of a friend of Sveta.
// Новый записывающийся всегда встаёт в конец очереди.
//Напишите программу, которая будет разбирать очередь из клиентов,
// с вероятностью 50% добавляя нового клиента после обработки текущего клиента.
//В качестве обработки клиента достаточно выводить на экран фразу виду:
// <имя> сделал новый маникюр. Например, Alexandra сделала новый маникюр.
//
//Шаги реализации
//
//Создайте пустую очередь и заполните её из списка firstClients.
//Создайте цикл разбора очереди клиентов. Для этого нужно создать цикл while
// с проверкой очереди на непустоту в качестве условия.
//На каждой итерации извлекайте следующего клиента,
//обрабатывайте его и затем пытайтесь добавить в очередь его друга.